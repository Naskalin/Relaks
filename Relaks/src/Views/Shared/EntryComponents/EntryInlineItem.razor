@using Relaks.Models
@using Relaks.Database
@using Microsoft.EntityFrameworkCore
@using Relaks.Utils.Extensions

@inject AppDbContext Db;

<div class="d-flex align-items-center gap-2" @onclick="@(() => OnClick.InvokeAsync(EntryId))" @attributes=@InputAttributes>
    <div class="avatar-sm">
        @if (!string.IsNullOrEmpty(Entry.Thumbnail))
        {
            <img src="@Entry.Thumbnail" alt="">
        }
        else
        {
            <CustomAvatar Text="@Entry.Name"/>
        }
    </div>

    <div class="w-100">
         <div class="fw-medium">@Entry.Name</div>

         @if (!string.IsNullOrEmpty(Entry.Description))
         {
             <div style="line-height: 1.2rem; max-height: 2.4rem;overflow: hidden;text-overflow: ellipsis;">
                 <div class="small">@Entry.Description.Truncate(50)</div>
             </div>
         }
         @if (AfterBody != null)
         {
             @AfterBody(Entry);
         }
    </div>
</div>

@code {

    [Parameter]
    public Guid EntryId { get; set; }
    
    [Parameter]
    public EventCallback<Guid> OnClick { get; set; }
    
    [Parameter(CaptureUnmatchedValues = true)]
    public Dictionary<string, object> InputAttributes { get; set; } = new();

    private BaseEntry Entry { get; set; } = null!;
    
    [Parameter]
    public RenderFragment<BaseEntry>? AfterBody { get; set; }

    protected override void OnParametersSet()
    {
        Entry = Db.BaseEntries
            .Include(x => x.EntryInfos)
            .First(x => x.Id.Equals(EntryId))
            ;
    }

}