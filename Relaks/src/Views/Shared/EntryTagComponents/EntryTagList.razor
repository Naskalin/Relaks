@using Relaks.Database
@using Relaks.Models
@using Relaks.Views.Shared.EntryTagComponents

@inject AppDbContext Db;

<CascadingValue Value="@Store">
    <div class="row">
        <div class="col-6">
            <div style="position: sticky; top: @StickyTopOffset; overflow-y: scroll; height: 85vh" class="pe-2">
                <EntryTagCategoriesHeader WithEdit="@WithEdit" OnStateChanged="@StateHasChanged"/>

                @switch (Store.SidebarState)
                {
                    case EntryTagListStore.SidebarStateEnum.NewCategory:
                    case EntryTagListStore.SidebarStateEnum.EditCategory:
                        <EntryTagCategoryForm OnStateChanged="@StateHasChanged"/>
                        break;
                    default:
                        <div class="mb-3">
                            <ul class="my-tree">
                                @foreach (var category in Store.Categories)
                                {
                                    <EntryTagCategoryItem WithEdit="@WithEdit" Category="@category" OnStateChanged="@StateHasChanged"/>
                                }
                            </ul>
                        </div>
                        break;
                }
            </div>
        </div>
        <div class="col-6">
            <div class="ms-3">
                <EntryTagHeader WithEdit="@WithEdit" OnStateChanged="@StateHasChanged"/>
                @switch (Store.TagsState)
                {
                    case EntryTagListStore.TagsStateEnum.EditTag:
                    case EntryTagListStore.TagsStateEnum.NewTag:
                        <EntryTagTitleForm OnStateChanged="@StateHasChanged"/>
                        break;
                    default:
                        <EntryTagFilter OnStateChanged="@StateHasChanged"/>
                        @if (Store.Tags.Any())
                        {
                            <div class="list-group">
                                @foreach (var tag in Store.Tags)
                                {
                                    <EntryTagTitleItem WithEdit="@WithEdit" OnEntryTagTitleClick="@OnEntryTagTitleClick" EntryTagTitle="@tag" OnStateChanged="@StateHasChanged"/>
                                }
                            </div>
                        }
                        else
                        {
                            <p class="text-muted"><i class="las la-info-circle la-lg me-1"></i> Метки не найдены.</p>
                        }
                        break;
                }
            </div>
        </div>
    </div>
</CascadingValue>

@code {
    [Parameter]
    public EventCallback<Guid> OnEntryTagTitleClick { get; set; }

    // [Parameter]
    // public string ListGroupClasses { get; set; } = "";

    [Parameter]
    public string StickyTopOffset { get; set; } = "100px";
    
    [Parameter]
    public bool WithEdit { get; set; }

    [Parameter]
    public RenderFragment<EntryTagTitle>? CustomTagTitle { get; set; }

    private EntryTagListStore Store { get; set; } = null!;
    
    protected override void OnParametersSet()
    {
        Store = new EntryTagListStore(Db);
        Store.Initialize();
    }

}