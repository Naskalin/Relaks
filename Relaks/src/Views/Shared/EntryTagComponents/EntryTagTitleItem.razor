@using Relaks.Models
@using Relaks.Views.Shared.EntryTagComponents

<div class="list-group-item bg-secondary bg-opacity-5 @CustomEntryTagTitleClasses">
    <div class="d-flex align-items-center gap-3 justify-content-between">
        <div class="col" @onclick="@(() => OnEntryTagTitleClick.InvokeAsync(EntryTagTitle.Id))">
            @if (CustomEntryTagTitle != null)
            {
                @CustomEntryTagTitle(EntryTagTitle)
            }
            else
            {
                <div>@EntryTagTitle.Title <small class="ms-1" style="opacity: .6">(@EntryTagTitle.Category.Title)</small></div>      
            }
        </div>
            @if (WithEdit)
            {
                <div class="col-auto">
                    <Tooltip Title="Изменить" Placement="Placement.Left">
                        <button class="btn btn-outline-secondary btn-circle btn-sm" @onclick="HandleEditBtnClick">
                            <i class="las la-edit"></i>
                        </button>
                    </Tooltip>
                </div>
            }
    </div>
</div>

@code {
    [Parameter]
    public EntryTagTitle EntryTagTitle { get; set; } = null!;
    
    [Parameter]
    public EventCallback<Guid> OnEntryTagTitleClick { get; set; }
    
    [Parameter]
    public EventCallback OnStateChanged { get; set; }
    
    [Parameter]
    public string? CustomEntryTagTitleClasses { get; set; }
    
    [Parameter]
    public bool WithEdit { get; set; }
    
    [Parameter]
    public RenderFragment<EntryTagTitle>? CustomEntryTagTitle { get; set; }
    
    [CascadingParameter]
    public EntryTagListStore Store { get; set; } = null!;
    
    private async Task HandleEditBtnClick()
    {
        Store.EditTagTitleId = EntryTagTitle.Id;
        Store.TagsState = EntryTagListStore.TagsStateEnum.EditTag;
        await OnStateChanged.InvokeAsync();
    }
}