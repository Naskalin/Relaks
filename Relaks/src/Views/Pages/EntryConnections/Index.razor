@page "/entries/{entryId:guid}/connections"

@using Relaks.Database
@using Relaks.Models.Store

@inject AppDbContext Db;

<EntryProfileLayout EntryId="@EntryId">
    <EntryProfileTabs EntryId="@EntryId"/>
    
    <MyTitle>Связи</MyTitle>
    
    <CascadingValue Value="@Store">
        <h5 class="mb-4">Задействован в структурах объединений</h5>
        @if (Store.StructureItems.Any())
        {
            @foreach (var sItem in Store.StructureItems)
            {
                <_StructureRelationItem StructureItem="@sItem"/>
            }   
        }
        else
        {
            <p class="text-muted"><i class="las la-info-circle la-lg me-1"></i> Связей не найдено. Объединение должно быть задействовано хотя бы в одной структуре другого объединения для отображения связи.</p>
        }
    </CascadingValue>
</EntryProfileLayout>

@code {
    [Parameter]
    public Guid EntryId { get; set; }

    private EntryConnectionStore Store { get; set; } = null!;

    protected override void OnParametersSet()
    {
        Store = new EntryConnectionStore(Db)
        {
            EntryId = EntryId,
        };
        
        Store.FindStructureItems();
        Store.FindStructureGroupTitles();
    // Store = new EntryStructureStore(Db)
    // {
    //     Req = new StructureGroupListRequest()
    //     {
    //         EntryId = EntryId,
    //     },
    //     Discriminator = Db.BaseEntries.Where(x => x.Id.Equals(EntryId)).Select(x => x.Discriminator).First()
    // };
    //
    // Store.FindStructure();
    }

}