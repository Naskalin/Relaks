@using Relaks.Models.Store
@using Relaks.Models.StructureModels
@using LinqKit

<div class="border p-3 mb-3 rounded">
    <div class="row align-items-center">
        <div class="col-auto">
            <button class="btn btn-circle btn-outline-secondary" @onclick="@(() => IsShowDetails = !IsShowDetails)">
                <i class="las la-lg @(IsShowDetails ? "la-eye" : "la-low-vision")"></i>
            </button>
        </div>
        <div class="col">
            <div>
                <div class="mb-1">
                    @if (BreadCrumbs != StructureItem.Group.Title)
                    {
                        <div><small class="form-text">@BreadCrumbs</small></div>
                    }
                    <span class="fw-medium text-secondary">@StructureItem.Group.Title</span>
                    @if (!string.IsNullOrEmpty(StructureItem.Group.Description))
                    {
                        <Popover Content="@StructureItem.Group.Description">
                            <i class="las la-comment la-lg ms-2 text-secondary"></i>
                        </Popover>
                    }
                </div>
    
                <EntryInlineItem EntryId="@StructureItem.Group.EntryId"/>
            </div>
        </div>
        <div class="col-auto">
            <a href="/entries/@StructureItem.Group.EntryId.ToString()/structure?@nameof(EntryStructureStore.BackToConnectionsStructureItem)=@StructureItem.Id.ToString()"
               class="btn btn-sm btn-secondary">
                В структуру <i class="las la-angle-right"></i>
            </a>
        </div>
    </div>
    @if (IsShowDetails)
    {
        <div class="border-top border-secondary my-3 border-opacity-10"></div>
        
        <div style="font-size: .8rem;">
            @StructureItem.StartAt.ToString("dd.MM.yyyy") - @StructureItem.EndAt?.ToString("dd.MM.yyyy")
        </div>
        @if (!string.IsNullOrEmpty(StructureItem.Title))
        {
            <span class="fw-medium">@StructureItem.Title</span>
        }
        @if (!string.IsNullOrEmpty(StructureItem.Description))
        {
            <div class="form-text">@StructureItem.Description</div>   
        }
    }
</div>

@code {

    [CascadingParameter]
    public EntryConnectionStore Store { get; set; } = null!;

    [Parameter]
    public StructureItem StructureItem { get; set; } = null!;

    private bool IsShowDetails { get; set; } = false;

    protected override void OnParametersSet()
    {
        BreadCrumbs = GetStructureBreadcrumbs();
    }

    private string BreadCrumbs { get; set; } = null!;

    private string GetStructureBreadcrumbs()
    {
        var treePathTitles = new List<string>();

        StructureItem.Group.TreePath.Split("/").ForEach(x =>
        {
            if (Guid.TryParse(x, out var treePathGuid))
            {
                treePathTitles.Add(Store.StructureGroupTitles.TryGetValue(treePathGuid, out var title) ? title : "?");
            }
        });

        return string.Join(" / ", treePathTitles);
    }

}