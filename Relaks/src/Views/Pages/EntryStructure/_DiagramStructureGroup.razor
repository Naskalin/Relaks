@using Relaks.Models.StructureModels
@using Relaks.Models.Store

<div class="structure-group">
    <div class="structure-group__el">
        @if (Group.ParentId.HasValue)
        {
            <div data-structure-group-arrow-parent-id="sg-bottom-@Group.ParentId.ToString()"
                 class="structure-group__dot structure-group__dot--top"></div>
        }
        @if (Store.DiagramOptions.IsShowDates)
        {
            <div style="font-size: .8rem;">
                <i class="las la-calendar la-lg me-1"></i>
                @Group.StartAt.ToString("dd.MM.yyyy") - @Group.EndAt?.ToString("dd.MM.yyyy")
            </div>   
        }
        <div>
            <span class="fw-semibold">@Group.Title @(Group.Items.Any() ? $"({Group.Items.Count})" : "")</span>
            @if (!string.IsNullOrEmpty(Group.Description))
            {
                <Popover Content="@Group.Description">
                    <i class="las la-comment ms-2 text-info" style="font-size: 1.6rem;"></i>
                </Popover>
            }
        </div>
        @if (Store.DiagramOptions.IsShowStructureItems && Group.Items.Any())
        {
            <div class="structure-items mt-2">
               @foreach (var item in Group.Items.Take(Store.DiagramOptions.LimitStructureItems))
                {
                    <_DiagramStructureItem Item="@item"/>
                }
            </div>   
        }
        @if (Group.Children.Any())
        {
            <div id="sg-bottom-@Group.Id.ToString()" class="structure-group__dot structure-group__dot--bottom"></div>
        }
    </div>
    
    @if (Group.Children.Any())
    {
        <div class="structure-group__child">
            @foreach (var child in Group.Children)
            {
                <_DiagramStructureGroup Group="@child"/>
            }
        </div>    
    }
</div>

@code {
    [CascadingParameter]
    public EntryStructureStore Store { get; set; } = null!;
    
    [Parameter]
    public StructureGroup Group { get; set; } = null!;
}