@page "/entries/{entryId:guid}/structure"

@using Relaks.Database
@using Relaks.Database.Repositories
@using Relaks.Models
@using Relaks.Models.Store

@inject AppDbContext Db;

<EntryProfileLayout EntryId="@EntryId">
    <EntryProfileTabs EntryId="@EntryId"/>
    <MyTitle>
        <ChildContent>Структура @(Store.Discriminator.Equals(nameof(ECompany)) ? "компании" : "встречи")</ChildContent>
        @* <EndTitle> *@
        @*     <a href="@($"/entries/{EntryId}/structure/new-group")" class="btn btn-primary"> *@
        @*         <i class="las la-plus-circle la-lg me-1"></i> *@
        @*         @Resources.Action.Add структуру *@
        @*     </a> *@
        @* </EndTitle> *@
    </MyTitle>
    
    <button type="button" class="btn btn-primary" @onclick="@(() => IsOpen = true)">click me to open</button>
    <Drawer Placement="Placement.Left" IsOpen="@IsOpen">
        <div class="d-flex justify-content-center align-items-center flex-column" style="height: 290px;">
            <p>The layout, components, etc. in the drawer are fully customizable</p>
            <button type="button" class="btn btn-primary" @onclick="@(() => IsOpen = false)">close the drawer</button>
        </div>
    </Drawer>
    
    <CascadingValue Value="@Store">
        <_StructureDiagram/>
    </CascadingValue>
</EntryProfileLayout>

@code {
    [Parameter]
    public Guid EntryId { get; set; }

    private bool IsOpen { get; set; } = false;

    private EntryStructureStore Store { get; set; } = null!;

    protected override void OnParametersSet()
    {
        Store = new EntryStructureStore(Db)
        {
            Req = new StructureGroupListRequest()
            {
                EntryId = EntryId,
            },
            Discriminator = Db.BaseEntries.Where(x => x.Id.Equals(EntryId)).Select(x => x.Discriminator).First()
        };
        
        Store.FindStructure();
    }

}