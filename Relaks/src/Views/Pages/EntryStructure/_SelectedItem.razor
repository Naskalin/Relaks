@using Relaks.Models.StructureModels

<div class="row align-items-center mb-3 justify-content-between">
    <div class="col-auto">
        <button type="button" class="btn btn-circle btn-outline-secondary" @onclick="@(() => OnClickReturn.InvokeAsync())" title="Вернуться">
            <i class="las la-arrow-left la-lg"></i>
        </button>
    </div>
    <div class="col">
        <div class="text-secondary">
            <i class="las la-calendar la-lg me-1"></i>
            @Item.StartAt.ToString("dd.MM.yyyy") - @Item.EndAt?.ToString("dd.MM.yyyy")
        </div>  
    </div>
    <div class="col-auto">
        <button type="button" class="btn btn-circle btn-outline-secondary" @onclick="@(() => OnItemEdit.InvokeAsync(Item))" title="Изменить">
            <i class="las la-edit la-lg"></i>
        </button>
    </div>
</div>

@if (!string.IsNullOrEmpty(Item.Title))
{
    <div class="bg-secondary-subtle p-1 rounded mb-2">
        @Item.Title
    </div>
}

@if (!string.IsNullOrEmpty(Item.Description))
{
    <div class="small mb-2">
      @Item.Description
    </div>
}

<EntryCard EntryId="@Item.EntryId"
           ViewMode="EntryCard.ViewModeEnum.Preview"
           CardClasses="margin: 0 auto;"
           />

@code {
    [Parameter]
    public StructureItem Item { get; set; } = null!;
    
    [Parameter]
    public EventCallback OnClickReturn { get; set; }
    
    [Parameter]
    public EventCallback<StructureItem> OnItemEdit { get; set; }
}