@using Relaks.Models.FinancialModels
@using Relaks.Views.Pages.EntryFinancials.ViewModels
@using Relaks.Database
@using Microsoft.EntityFrameworkCore

@inject NavigationManager Navigation;
@inject AppDbContext Db;

<div class="d-flex align-items-center mb-3 gap-3 position-relative">
    <button type="button" class="btn btn-outline-primary" @onclick="@(() => Store.IsOpenAccounts = !Store.IsOpenAccounts)">
        <div class="text-center">Выберите счёт <i class="las la-angle-down ms-2"></i></div>
    </button>
    @if (Store.IsOpenAccounts)
    {
        <div class="position-absolute start-0 z-3 p-1 border border-2 rounded" style="top: 40px;background-color: var(--bs-body-bg)">
            <_AccountsList AccountIdChanged="@HandleClickAccount"
                           AccountId="@Store.AccountId"
                           EntryId="@Store.EntryId"
                           AccountCategories="@Store.AccountCategories"
                           FinancialAccountStatistic="@Store.FinancialAccountStatistic">
                <EndOfCategoryTitle>
                    <button type="button"
                            @onclick="@(() => Store.ShowAccountCategoryFormModal(context))"
                            class="btn btn-circle btn-sm btn-outline-secondary" title="Изменить">
                        <i class="las la-edit la-lg"></i>
                    </button>
                </EndOfCategoryTitle>
                <EndOfItemTitle>
                    <button type="button"
                            @onclick="@(() => Store.ShowAccountFormModal(context))"
                            class="btn btn-circle btn-sm btn-outline-secondary" title="Изменить">
                        <i class="las la-edit la-lg"></i>
                    </button>
                </EndOfItemTitle>
            </_AccountsList>
        </div>
    }

    @if (Store.Account != null)
    {
        <div>
                <span class="h5">@Store.Account.Title</span>
                @if (!string.IsNullOrEmpty(Store.Account.Description))
                {
                    <Popover Content="@Store.Account.Description">
                        <i class="las la-comment la-lg ms-2" style="opacity: .7"></i>
                    </Popover>
                }
            <span class="ms-2 fw-medium @(Store.Account.Balance > 0 ? "text-success" : "text-danger")" style="font-size: 1.2rem; opacity: .9">
                @Store.Account.Balance.ToString("N2") @Store.Account.FinancialCurrency.Symbol
            </span>
        </div>
    }
</div>
@code {
    [CascadingParameter]
    public FinancialsStore Store { get; set; } = null!;

    [Parameter]
    public EventCallback OnStateChanged { get; set; }

    private Task HandleClickAccount(Guid? accountId)
    {
        Navigation.NavigateTo($"/entries/{Store.EntryId}/financials/{accountId.ToString()}");
        Store.AccountId = accountId;
        Store.FindAccount();

        Store.IsOpenAccounts = false;
        return OnStateChanged.InvokeAsync();
    }
}