@page "/test"

@inject DialogService DialogService;

<PageTemplate>
    <MyTitle>Test</MyTitle>

    <div class="text-success">@SelectedPath</div>
    
    <div>
        <button type="button" class="btn btn-secondary" @onclick="@Back">back</button>
    </div>

    @foreach (var drive in DriveInfo.GetDrives())
    {
        <button type="button" @onclick="@(() => HandleClick(drive.Name))">@drive.Name</button>
    }
    
    <ul>
        @foreach (var dir in Dirs)
        {
            <li><button type="button" @onclick="@(() => HandleClick(dir))">@dir</button></li>    
        }
    </ul>
</PageTemplate>

@code {
    private string SelectedPath { get; set; } = "";
    private List<string> Dirs { get; set; } = new();

    private void Back()
    {
        var parent = Directory.GetParent(SelectedPath);
        if (parent == null) return;
        
        SelectedPath = parent.FullName;
        Dirs = GetDirsFromPath();
    }

    private void HandleClick(string path)
    {
        SelectedPath = path;
        Dirs = GetDirsFromPath();
    }

    private List<string> GetDirsFromPath()
    {
        return Directory.EnumerateDirectories(SelectedPath)
            .Select(s => new DirectoryInfo(s))
            .Where(s => s.Attributes.HasFlag(FileAttributes.Directory))
            .Where(s => !s.Attributes.HasFlag(FileAttributes.System))
            .Where(s => !s.Attributes.HasFlag(FileAttributes.Hidden))
            .Select(s=> s.FullName).ToList();
    }
}