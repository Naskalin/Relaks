@using Relaks.Views.Pages.Financials.ViewModels
@using Relaks.Models.FinancialModels
@using Relaks.Database
@using Relaks.Database.Repositories
@using Microsoft.EntityFrameworkCore

@inject AppDbContext Db;

<MyPagination TotalPages="@Store.Transactions.TotalPages"
              ActivePage="@Store.TransactionListRequest.Page"
              TotalItems="@Store.Transactions.TotalItems"
              OnPageChanged="@HandlePageChanged"
/>

<table class="table table-hover table-striped align-middle my-3">
    <thead>
    <tr>
        <th style="width: 50px"></th>
        <th style="width: 125px">Дата</th>
        <th style="width: 100px">Тип</th>
        <th style="width: 100px">Сумма</th>
        <th style="width: 180px">Баланс в моменте</th>
        <th style="width: 450px">Объединение</th>
        <th>Описание</th>
    </tr>
    </thead>
    <tbody>
    @foreach (var t in Store.Transactions.Items)
    {
        <tr class="group-show">
            <td>
                <button type="button" class="btn btn-circle btn-outline-secondary btn-sm group-show__item" @onclick="@(() => HandleEditTransaction(t.Id))">
                    <i class="las la-edit la-lg"></i>
                </button>
            </td>
            <td>@t.CreatedAt.ToString("dd.MM.yyyy HH:mm")</td>
            <td><Badge Color="@(t.IsPlus ? Color.Success : Color.Danger)">@(t.IsPlus ? "Пополнение" : "Списание")</Badge></td>
            <td style="white-space: nowrap">@t.Total.ToString("N2") @t.Account.FinancialCurrency.Symbol</td>
            <td style="white-space: nowrap">
                @t.FromBalance().ToString("N2") @t.Account.FinancialCurrency.Symbol
                <i class="las la-long-arrow-alt-right la-lg text-secondary"></i>
                @t.Balance.ToString("N2") @t.Account.FinancialCurrency.Symbol
            </td>
            <td>
                <EntryInlineItem EntryId="@t.EntryId"/>
            </td>
            <td>
                @if (!string.IsNullOrEmpty(t.Description) && t.Description.Length > 150)
                {
                    <small>@t.Description[..150]</small>
                }
            </td>
        </tr>
    }
    </tbody>
</table>

<MyPagination TotalPages="@Store.Transactions.TotalPages"
              ActivePage="@Store.TransactionListRequest.Page"
              TotalItems="@Store.Transactions.TotalItems"
              OnPageChanged="@HandlePageChanged"
              />

@code {
    [CascadingParameter]
    public FinancialsStore Store { get; set; } = null!;

    [Parameter]
    public EventCallback OnStateChanged { get; set; }
    
    private Task HandlePageChanged(int page)
    {
        Store.TransactionListRequest.Page = page;
        Store.FindTransactions();
        return OnStateChanged.InvokeAsync();
    }

    private Task HandleEditTransaction(Guid transactionId)
    {
        Store.BodyEditTransactionId = transactionId;
        Store.BodyState = FinancialsStore.BodyEnum.EditTransaction;
        return OnStateChanged.InvokeAsync();
    }
}