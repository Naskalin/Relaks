@page "/financials"
@page "/financials/{accountId:guid}"

@using Relaks.Views.Pages.Financials.ViewModels
@using Relaks.Database

@inject AppDbContext Db;

<PageTemplate>
    <MyTitle>Финансы</MyTitle>

    <CascadingValue Value="@Store">
        <div class="row">
            <div class="col-3">
                <div>
                    @switch (Store.SidebarState)
                    {
                        case FinancialsStore.SidebarEnum.EditAccountCategory:
                        case FinancialsStore.SidebarEnum.AddAccountCategory:
                            <_AccountCategoryForm OnStateChanged="@StateHasChanged"/>
                            break;
                        case FinancialsStore.SidebarEnum.EditAccount:
                        case FinancialsStore.SidebarEnum.AddAccount:
                            <_AccountForm OnStateChanged="@StateHasChanged"/>
                            break;
                        default:
                            <_SidebarDefault OnStateChanged="@StateHasChanged"/>
                            break;
                    }
                </div>
            </div>
            <div class="col-9 ps-4">
                @switch (Store.BodyState)
                {
                    case FinancialsStore.BodyEnum.EditTransaction:
                    case FinancialsStore.BodyEnum.AddTransaction:
                        <_TransactionForm OnStateChanged="@StateHasChanged"/>
                        break;
                    default:
                        <_BodyDefault OnStateChanged="@StateHasChanged"/>
                        break;
                }
                
            </div>
        </div>
        
    </CascadingValue>
</PageTemplate>

@code {
    private FinancialsStore Store { get; set; } = null!;
    
    [SupplyParameterFromQuery]
    public Guid? AccountId { get; set; }

    private void MapQueryParameters()
    {
        Store.AccountId = AccountId;
    }

    protected override void OnParametersSet()
    {
        MapQueryParameters();
    }

    protected override void OnInitialized()
    {
        Store = new(Db);
        MapQueryParameters();
        Store.Initialize();
    }

}