@using Relaks.Views.Pages.Financials.ViewModels

<div class="d-flex align-items-center justify-content-between mb-3 gap-2">
    <div class="col">
        <span class="h5">Счета</span>
    </div>
    <div class="col-auto">
        <button type="button" class="btn btn-outline-primary btn-sm" @onclick="@HandleAddAccount">
            Счёт
            <i class="las la-plus-circle la-lg ms-1"></i>
        </button>
    </div>
    <div class="col-auto">
        <button type="button" class="btn btn-outline-primary btn-sm" @onclick="@HandleAddCategory">
            Категория счёта
            <i class="las la-plus-circle la-lg ms-1"></i>
        </button>
    </div>
</div>

<div class="d-flex flex-column gap-3">
    @foreach (var category in Store.AccountCategories)
    {
        <_SidebarCategoryItem OnStateChanged="@(() => OnStateChanged.InvokeAsync())" Category="@category"/>
    }
</div>

@code {

    [CascadingParameter]
    public FinancialsStore Store { get; set; } = null!;

    [Parameter]
    public EventCallback OnStateChanged { get; set; }

    private Task HandleAddCategory()
    {
        Store.SidebarState = FinancialsStore.SidebarEnum.AddAccountCategory;
        return OnStateChanged.InvokeAsync();
    }

    private Task HandleAddAccount()
    {
        Store.SidebarState = FinancialsStore.SidebarEnum.AddAccount;
        return OnStateChanged.InvokeAsync();
    }
}