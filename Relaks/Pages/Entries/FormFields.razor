@using Relaks.Models
@using Relaks.Models.Requests.EntryRequests

<div class="mb-3">
    <label for="" class="form-label">Тип</label>

    <InputRadioGroup @bind-Value="@Req.Discriminator">
        @foreach (var d in DataHelper.EntryDiscriminators)
        {
            <div class="form-check">
                <InputRadio Value="@d" id="@($"entry-{d}")" class="form-check-input"/>
                <label for="@($"entry-{d}")" class="form-check-label">@d</label>
            </div>
        }
    </InputRadioGroup>
    
    <ValidationMessage For="@(() => Req.Discriminator)"/>
</div>

<div class="mb-3 input-lg">
    <label for="" class="form-label form-label-lg">Имя</label>
    <input type="text" class="form-control form-control-lg" @bind="@Req.Name"/>
    <ValidationMessage For="@(() => Req.Name)"/>
</div>

<div class="mb-3">
    <MyTextarea Label="Краткое описание" @bind-Value="@Req.Description"/>
    <ValidationMessage For="@(() => Req.Description)"/>
</div>

<div class="row">
    <div class="col">
        <div class="mb-3">
            <label for="" class="form-label">@nameof(BaseEntry.StartAt)</label>
            <InputDate Type="@(IsMeet() ? InputDateType.DateTimeLocal : InputDateType.Date)"
                       @bind-Value="@Req.StartAt"
                       class="form-control"/>
            <ValidationMessage For="@(() => Req.StartAt)"/>
        </div>
    </div>
    <div class="col">
       <div class="mb-3">
           <label for="" class="form-label">@nameof(BaseEntry.EndAt)</label>
           <InputDate Type="@(IsMeet() ? InputDateType.DateTimeLocal : InputDateType.Date)"
                      @bind-Value="@Req.EndAt"
                      class="form-control"/>
           <ValidationMessage For="@(() => Req.EndAt)"/>
       </div>
    </div>
</div>

@code {

    [Parameter]
    public EntryFormRequest Req { get; set; } = null!;

    [Parameter]
    public EventCallback<EntryFormRequest> ReqChanged { get; set; }

    private bool IsMeet() => nameof(EMeet).Equals(Req.Discriminator);
}