@* @page "/entries/{entryId:guid}/einfo/new/{discriminator}" *@
@* @using Relaks.Models.Requests.EntryInfoRequests *@
@* @using Relaks.Database *@
@* @using Relaks.Mappers *@
@* @using Relaks.Models *@
@* *@
@* <EntryProfileLayout EntryId="@EntryId"> *@
@*     <HalfPage> *@
@*         <MyTitle> *@
@*             <BeforeTitle> *@
@*                 <a href="/entries/@EntryId/info" class="btn btn-outline-secondary"> *@
@*                     <i class="las la-arrow-left la-lg me-1"></i> Вернуться *@
@*                 </a> *@
@*             </BeforeTitle> *@
@*             <ChildContent>Добавить @Discriminator</ChildContent> *@
@*         </MyTitle> *@
@* *@
@*         <Dump Data="@Req"/> *@
@*         <EditForm Model="@Req" OnSubmit="OnSubmit"> *@
@*             <FluentValidationValidator DisableAssemblyScanning="@true"/> *@
@*             <ValidationSummary/> *@
@*             <FormFields @bind-Req="@Req"/> *@
@*             <button class="btn btn-primary">Добавить</button> *@
@*         </EditForm> *@
@*     </HalfPage> *@
@* </EntryProfileLayout> *@
@* *@
@* @code { *@
@* *@
@*     [Parameter] *@
@*     public Guid EntryId { get; set; } *@
@* *@
@*     [Parameter] *@
@*     public string Discriminator { get; set; } = null!; *@
@* *@
@*     [Inject] *@
@*     public AppDbContext Db { get; set; } = null!; *@
@*      *@
@*     [Inject] *@
@*     public NavigationManager NavigationManager { get; set; } = null!; *@
@* *@
@*     private EntryInfoCreateRequest Req { get; set; } = new(); *@
@* *@
@*     protected override void OnParametersSet() *@
@*     { *@
@*         Req.Discriminator = Discriminator; *@
@*     } *@
@* *@
@*     private void OnSubmit() *@
@*     { *@
@*         // BaseEntryInfo eInfo; *@
@*         // *@
@*         // switch (Discriminator) *@
@*         // { *@
@*         //     case nameof(EiPhone): *@
@*         //         eInfo = new EiPhone(); *@
@*         //         Req.MapPhone((EiPhone) eInfo); *@
@*         //         break; *@
@*         //     case nameof(EiEmail): *@
@*         //         eInfo = new EiEmail(); *@
@*         //         Req.MapEmail((EiEmail) eInfo); *@
@*         //         break; *@
@*         //     case nameof(EiDate): *@
@*         //         eInfo = new EiDate(); *@
@*         //         Req.MapDate((EiDate) eInfo); *@
@*         //         break; *@
@*         //     case nameof(EiUrl): *@
@*         //         eInfo = new EiUrl(); *@
@*         //         Req.MapUrl((EiUrl) eInfo); *@
@*         //         break; *@
@*         //     default: *@
@*         //         throw new ArgumentException($"Error: Discriminator {Discriminator} is not supported"); *@
@*         // } *@
@*         // *@
@*         // eInfo.EntryId = EntryId; *@
@*         // Req.MapEntryInfo(eInfo); *@
@*         // *@
@*         // Db.BaseEntryInfos.Add(eInfo); *@
@*         // Db.SaveChanges(); *@
@*         // NavigationManager.NavigateTo($"/entries/{EntryId}/info"); *@
@* *@
@* *@
@*         System.Console.WriteLine($"-----------------------------------------------------------------------"); *@
@*         System.Console.WriteLine($"{Req.Title} {Req.Discriminator} {Req.IsFavorite}"); *@
@*         System.Console.WriteLine($"-----------------------------------------------------------------------"); *@
@*     } *@
@* *@
@* } *@