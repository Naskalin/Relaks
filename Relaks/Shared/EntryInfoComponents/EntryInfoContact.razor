@using Relaks.Models
@using SixLabors.ImageSharp.Memory

<div>
    <div class="row align-items-center" id="entry-info-@EntryInfo.Id">
        <div class="col-auto" style="width: 2rem">
            <i class="@DataHelper.EntityIcon(EntryInfo.Discriminator) la-lg @(EntryInfo.IsFavorite ? "text-warning" : "")"></i>
        </div>
        <div class="col">
            @if (EiPhone != null)
            {
                <a href="tel:@EiPhone.Number" target="_blank">@EiPhone.Region @EiPhone.Number</a>
            }
            else if (EiEmail != null)
            {
                <a href="mailto:@EiEmail.Email" target="_blank" class="text-break">@EiEmail.Email</a>
            }
            else if (EiUrl != null)
            {
                <a href="@EiUrl.Url" target="_blank" class="text-break">@EiUrl.Url</a>
            }
            else if (EiDate != null)
            {
                @EiDate.Date.ToString(EiDate.WithTime ? "dd.MM.yyyy HH:mm" : "dd.MM.yyyy")
            }
            else
            {
                <span class="text-danger">@EntryInfo.Discriminator is not supported</span>
            }
    
            @if (!string.IsNullOrEmpty(EntryInfo.Title))
            {
                <div>
                    <small class="mt-1">@EntryInfo.Title</small>
                </div>
            }
        </div>
    </div>
    
    <SoftDeleteShow SoftDeletedReason="@EntryInfo" Classes="mt-2 p-1 small"/>
</div>
@code {
    [Parameter]
    public BaseEntryInfo EntryInfo { get; set; } = null!;
    
    [Parameter]
    public Guid? EntryInfoId { get; set; }

    private EiDate? EiDate { get; set; }
    private EiUrl? EiUrl { get; set; }
    private EiEmail? EiEmail { get; set; }
    private EiPhone? EiPhone { get; set; }

    protected override void OnParametersSet()
    {
        switch (EntryInfo.Discriminator)
        {
            case nameof(EiPhone):
                EiPhone = (EiPhone) EntryInfo;
                break;
            case nameof(EiEmail):
                EiEmail = (EiEmail) EntryInfo;
                break;
            case nameof(EiUrl):
                EiUrl = (EiUrl) EntryInfo;
                break;
            case nameof(EiDate):
                EiDate = (EiDate) EntryInfo;
                break;
        }
    }

}