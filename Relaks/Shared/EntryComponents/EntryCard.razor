@using Relaks.Models
@using Relaks.Database
@using Microsoft.EntityFrameworkCore

@inject AppDbContext Db;
@inject NavigationManager NavigationManager;

<div style="width: 20rem;">
    @if (HideSoftDeleted != true)
    {
        <SoftDeleteShow SoftDeletedReason="@Entry"/>
    }

    <div class="card entry-card @(Entry.DeletedAt != null ? "border-danger" : "")">
        <img src="https://via.placeholder.com/300x300" class="card-img-top" alt="...">
        @if (WithEdit == true)
        {
            <EntryCardContactsButtons EntryId="@EntryId"/>
        }
        <div class="card-body">
            <h5 class="card-title text-center">@Entry.Name</h5>
            <div class="row gx-3 align-items-center text-muted mb-3 justify-content-center">
                <div class="col-auto">
                    <Tooltip Title="@Resources.Entity.ResourceManager.GetString(Entry.Discriminator)">
                        <div style="width: 30px; height: 28px;">
                            <i class="@DataHelper.EntityIcon(Entry.Discriminator)" style="font-size: 1.8rem;"></i>
                        </div>
                    </Tooltip>
                </div>
                @* <div class="col-auto"> *@
                @*     <div class="d-flex align-items-center gap-1"> *@
                @*         <i class="las la-star-half-alt" style="font-size: 1.7rem;"></i> *@
                @*         <span style="font-size: 1.2rem;">@Entry.Reputation</span> *@
                @*     </div> *@
                @* </div> *@
            </div>

            @if (!string.IsNullOrEmpty(Entry.Description))
            {
                <p class="card-text text-center">@Entry.Description</p>
            }

            <EntryCardContacts EntryInfoId="@EntryInfoId" EntryInfos="@Entry.EntryInfos" WithEdit="@WithEdit"/>

            @if (Entry.StartAt != null || Entry.EndAt != null)
            {
                <div class="row mt-2">
                    <div class="col">
                        @if (Entry.StartAt != null)
                        {
                            <small>@Entry.StartAt?.ToString(Entry.StartAtWithTime ? "dd.MM.yyyy HH:mm" : "dd.MM.yyyy")</small>
                        }
                    </div>
                    <div class="col text-end">
                        @if (Entry.EndAt != null)
                        {
                            <small>@Entry.EndAt?.ToString(Entry.EndAtWithTime ? "dd.MM.yyyy HH:mm" : "dd.MM.yyyy")</small>
                        }
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@code {
    
    [Parameter]
    public Guid EntryId { get; set; }

    [Parameter]
    public Guid? EntryInfoId { get; set; }

    [Parameter]
    public bool? WithEdit { get; set; }
    
    [Parameter]
    public bool? HideSoftDeleted { get; set; }

    private BaseEntry Entry { get; set; } = null!;

    protected override void OnParametersSet()
    {
        Entry = Db.BaseEntries
            .Include(x => x.EntryInfos)
            .First(x => x.Id.Equals(EntryId))
        ;
    }

}